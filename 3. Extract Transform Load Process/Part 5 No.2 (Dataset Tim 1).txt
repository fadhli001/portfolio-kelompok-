query2 = """
drop table if exists`aqueous-freedom-398208.OFD_Team_1.costumer_segmentation`;
create table `aqueous-freedom-398208.OFD_Team_1.costumer_segmentation` AS
WITH tabel AS (
    SELECT
        id_customer,
        c.name,
        DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AS last_order_date,
        DATE_DIFF(o.order_date, c.registration_date, DAY) AS days_since_registration,
        COUNT(*) OVER (PARTITION BY c.name) AS total_transaction,
        SUM(f.price * o.quantity) OVER (PARTITION BY c.name) AS total_spending,
        ROW_NUMBER() OVER (PARTITION BY c.name ORDER BY o.order_date DESC) AS row_num,
        LAG(o.order_date) OVER (PARTITION BY c.name ORDER BY o.order_date) AS prev_order_date
    FROM aqueous-freedom-398208.OFD_Team_1.Customer c
    LEFT JOIN aqueous-freedom-398208.OFD_Team_1.Order o ON c.id_customer = o.fk_customer_id
    LEFT JOIN aqueous-freedom-398208.OFD_Team_1.Food f ON f.id_food = o.fk_food_id AND o.order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
    WHERE c.registration_date <= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
      AND o.order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) -- Tambahkan kondisi untuk memfilter tanggal pesanan
)
SELECT
    id_customer,
    name,
    DATE_SUB(CURRENT_DATE(), INTERVAL 0 DAY) AS today_date,
    DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AS last_order,
    total_transaction,
    total_spending,
    CASE 
        WHEN total_spending >= 500001 THEN 'Big Spender'
        WHEN total_transaction <= 1 THEN 'New'
        WHEN total_transaction <= 5 THEN 'Good'
        WHEN total_transaction <= 10 THEN 'Potential'
        ELSE 'Loyalist'
    END AS segmentation
FROM tabel
ORDER BY last_order_date DESC;


"""

result2 = bigquery_client.query(query2)
df2 = result2.to_dataframe()

df2